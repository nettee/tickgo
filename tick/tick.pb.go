// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tick.proto

/*
Package tick is a generated protocol buffer package.

It is generated from these files:
	tick.proto

It has these top-level messages:
	Auth
	Time
*/
package tick

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Auth struct {
	Username string `protobuf:"bytes,1,opt,name=Username" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
}

func (m *Auth) Reset()                    { *m = Auth{} }
func (m *Auth) String() string            { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()               {}
func (*Auth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Auth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Auth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Time struct {
	Timestamp int32 `protobuf:"varint,1,opt,name=Timestamp" json:"Timestamp,omitempty"`
}

func (m *Time) Reset()                    { *m = Time{} }
func (m *Time) String() string            { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()               {}
func (*Time) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Time) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Auth)(nil), "tick.Auth")
	proto.RegisterType((*Time)(nil), "tick.Time")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClockProvider service

type ClockProviderClient interface {
	GetTime(ctx context.Context, in *Auth, opts ...grpc.CallOption) (*Time, error)
}

type clockProviderClient struct {
	cc *grpc.ClientConn
}

func NewClockProviderClient(cc *grpc.ClientConn) ClockProviderClient {
	return &clockProviderClient{cc}
}

func (c *clockProviderClient) GetTime(ctx context.Context, in *Auth, opts ...grpc.CallOption) (*Time, error) {
	out := new(Time)
	err := grpc.Invoke(ctx, "/tick.ClockProvider/GetTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClockProvider service

type ClockProviderServer interface {
	GetTime(context.Context, *Auth) (*Time, error)
}

func RegisterClockProviderServer(s *grpc.Server, srv ClockProviderServer) {
	s.RegisterService(&_ClockProvider_serviceDesc, srv)
}

func _ClockProvider_GetTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Auth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClockProviderServer).GetTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tick.ClockProvider/GetTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClockProviderServer).GetTime(ctx, req.(*Auth))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClockProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tick.ClockProvider",
	HandlerType: (*ClockProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTime",
			Handler:    _ClockProvider_GetTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tick.proto",
}

func init() { proto.RegisterFile("tick.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc9, 0x4c, 0xce,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xec, 0xb8, 0x58, 0x1c, 0x4b,
	0x4b, 0x32, 0x84, 0xa4, 0xb8, 0x38, 0x42, 0x8b, 0x53, 0x8b, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x90, 0x5c, 0x40, 0x62, 0x71, 0x71, 0x79, 0x7e, 0x51,
	0x8a, 0x04, 0x13, 0x44, 0x0e, 0xc6, 0x57, 0x52, 0xe1, 0x62, 0x09, 0xc9, 0xcc, 0x4d, 0x15, 0x92,
	0xe1, 0xe2, 0x04, 0xd1, 0xc5, 0x25, 0x89, 0xb9, 0x05, 0x60, 0x03, 0x58, 0x83, 0x10, 0x02, 0x46,
	0x26, 0x5c, 0xbc, 0xce, 0x39, 0xf9, 0xc9, 0xd9, 0x01, 0x45, 0xf9, 0x65, 0x99, 0x29, 0xa9, 0x45,
	0x42, 0xca, 0x5c, 0xec, 0xee, 0xa9, 0x25, 0x60, 0x9d, 0x5c, 0x7a, 0x60, 0x47, 0x81, 0x5c, 0x21,
	0x05, 0x65, 0x83, 0xc4, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x0e, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xf2, 0xfb, 0xc8, 0x6a, 0xb6, 0x00, 0x00, 0x00,
}
